# frozen_string_literal: true

IRB.conf[:HISTORY_FILE] = File.join(ENV.fetch('XDG_CACHE_HOME'), 'irb_hist')

%w[
  English
  base64
  bigdecimal
  cgi
  digest
  erb
  etc
  fcntl
  fiber
  fileutils
  io/console
  ipaddr
  json
  logger
  net/http
  open3
  openssl
  optparse
  ostruct
  pathname
  pp
  securerandom
  set
  shellwords
  socket
  stringio
  tempfile
  thread
  uri
  yaml
].each(&Kernel.method(:require))

Thread.tap do
  _1.abort_on_exception = true
  _1.report_on_exception = false
end

module Kernel
  def clear = Kernel.system('clear', '--', exception: true)

  def _ls_methods
    (methods - Object.methods).sort
  end

  unless respond_to?(:assert)
    def assert(f, msg = nil)
      Kernel.raise(msg) unless f
    end
  end
end

class Method
  def _edit
    path, lineno = source_location
    if File.file?(path.to_s)
      system(*ENV.fetch('EDITOR').shellsplit, "#{path}:#{lineno}")
    else
      Kernel.warn(inspect)
    end
  end
end
