# frozen_string_literal: true

IRB.conf[:HISTORY_FILE] = File.join(ENV.fetch("XDG_CACHE_HOME"), "irb_hist")

%w[
  English
  base64
  bigdecimal
  cgi
  digest
  erb
  etc
  fcntl
  fiber
  fileutils
  io/console
  ipaddr
  json
  logger
  net/http
  open3
  openssl
  optparse
  ostruct
  pathname
  pp
  securerandom
  set
  shellwords
  socket
  stringio
  tempfile
  thread
  uri
  yaml
].each(&method(:require))

module Kernel
  def clear = system("clear", "--", exception: true)

  def _ls_methods
    (methods - Object.methods).sort
  end

  unless respond_to?(:assert!)
    def assert!(c, m = nil, &msg)
      raise(msg&.call || m) unless c
      c
    end
  end
end

class Method
  def _edit
    source_location => [path, lineno]
    if File.file?(path.to_s)
      system(*ENV.fetch("EDITOR").shellsplit, "#{path}:#{lineno}")
    else
      warn(inspect)
    end
  end
end
